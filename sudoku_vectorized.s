#define STDOUT 0xd0580000

.section .text
.global _start
_start:

	li x1, 0xd0580000	# stdout
	j main

is_valid:
	
	# arguments:
	# a1: k
	# a2: row
	# a3: col
	
	# a4: return value (1 if true; 0 otherwise)
	
	# allocating space in stack for temp variables
	addi sp, sp, -52
	sw t0, 0(sp)
	sw t1, 4(sp)
	sw t2, 8(sp)
	sw t3, 12(sp)
	sw t4, 16(sp)
	sw t5, 20(sp)
	sw s0, 24(sp)
	sw s1, 28(sp)
	sw s2, 32(sp)
	sw a1, 36(sp)
	sw a2, 40(sp)
	sw a3, 44(sp)
	sw ra, 48(sp)
	
	not_in_row:
	
	# VECTORIZED:
	
	slli t1, a2, 6			# t1 = row * 64
	add t1, t1, a0			# adding offset to grid
	vle8.v v0, (t1)			# get row vector
	
	vmseq.vx v3, v0, a1		# compare each element of v0 with k (a1)
	vfirst.m t2, v3			# if (t2 == -1), k not found
	addi t3, x0, -1			# t3 = -1
	
	bne t2, t3, false		# t2 != -1, k found
	
	not_in_column:
	
	# VECTORIZED:
	
	# storing the column as a vector, then checking for k
	
	li t0, 0		# i = 0
	li t1, 64		# 64 iterations
	
	li t2, 1		# t2 = 1
	li t3, 0		# t3 = 0
	la t4, mask		# base address of mask
	
	vmv.v.i v1, 0		# splat zero in col_vector (initialize)
	
	add s0, a0, a3		# s0 = [base_address] + col

	for:
		beq t0, t1, end_for
		
		add t5, t4, t0			# add byte offset
		sb t2, (t5)			# mask[i] = 1
		
		lb s1, (s0)			# load byte element
		
		vle8.v v0, (t4)			# get mask vector
		
		vmerge.vxm v1, v1, s1, v0	# v1[i] = s1
		sb t3, (t5)			# reset mask (mask[i] = 0)
		
		addi s0, s0, 64			# t2 += 64 (val in next row)
		addi t0, t0, 1			# i++
		
		j for
		
	end_for:
	
	vmseq.vx v3, v1, a1		# compare each element of v1 with k (a1)
	vfirst.m t2, v3			# if (t2 == -1), k not found
	li t3, -1			# t3 = -1
	
	bne t2, t3, false		# t2 != -1, k found
	
		
	not_in_box:
	
	# VECTORIZED:
	
	la s0, mask
	li t0, 0
	li t1, 1
	
	li s1, 8		# s1 = 8
	
	div t2, a2, s1		# t2 = row / 8
	mul t2, t2, s1		# box_r => t2 = (row / 8) * 8
	
	div t3, a3, s1		# t3 = col / 8
	mul t3, t3, s1		# box_c => t3 = (col / 8) * 8
	
	add t3, t3, s0
	
	# storing 1 in mask (group of 8 1's, representing the relevant columns)
	sb t1, 0(t3)
	sb t1, 1(t3)
	sb t1, 2(t3)
	sb t1, 3(t3)
	sb t1, 4(t3)
	sb t1, 5(t3)
	sb t1, 6(t3)
	sb t1, 7(t3)
	
	vle8.v v0, (s0)			# get mask vector
	
	add t5, t2, t4			# t5 = box_row
	slli t5, t5, 6			# t5 = (box_row) * 64
	add t5, t5, a0			# offset + base address of grid
	
	vmv.v.i v3, 0			# splat 0 in v3
	
	li t4, 0
	
	for1:
	
		beq t4, s1, end_for1
	
		# loading vector v1 (relevant row):
		
		vle8.v v1, (t5)			# get row vector
		
		vmerge.vvm v1, v3, v1, v0	# replaces irrelevant values with 0
		
		vmseq.vx v2, v1, a1		# compare elements of v1 with k
		vfirst.m t6, v2			# if (t6 == -1), k not found
		li s2, -1			# t3 = -1
		
		bne t6, s2, false		# t2 != -1, k found
		
		addi t4, t4, 64			# getting address for next row
		addi t5, t5, 1			# i++
	
	end_for1:
	
	# restoring 0 in mask
	sb t0, 0(t3)
	sb t0, 1(t3)
	sb t0, 2(t3)
	sb t0, 3(t3)
	sb t0, 4(t3)
	sb t0, 5(t3)
	sb t0, 6(t3)
	sb t0, 7(t3)
	
	true:
		addi a4, x0, 1		# return 1 (true)
		j done
	
	false:
		add a4, x0, x0		# return 0 (false)
	
	done:
		# de-allocating space in stack
		lw t0, 0(sp)
		lw t1, 4(sp)
		lw t2, 8(sp)
		lw t3, 12(sp)
		lw t4, 16(sp)
		lw t5, 20(sp)
		lw s0, 24(sp)
		lw s1, 28(sp)
		lw s2, 32(sp)
		lw a1, 36(sp)
		lw a2, 40(sp)
		lw a3, 44(sp)
		lw ra, 48(sp)
		addi sp, sp, 52
		
		jr ra
		
	
solve:

	# arguments:
	# a1: row
	# a2: col
	
	# a4: return value (1 if true; 0 otherwise)
	
	# allocating space in stack
	addi sp, sp, -12
	sw a1, 0(sp)
	sw a2, 4(sp)
	sw ra, 8(sp)

	li t1, 64
	bge a1, t1, return_true  # if (r == N) return true;

	bge a2, t1, next_row     # if (c == N) return solve(grid, r + 1, 0);

	slli t2, a1, 6		# t2 = row x 64 (row offset)
	add t2, t2, a2		# t2 += (column offset)
	add t2, a0, t2		# t2 = [base_address] + (offset)
	lb t3, 0(t2)            # t3 = grid[r][c]

	bnez t3, next_col        # if (grid[r][c] != 0) return solve(grid, r, c + 1);

	li t4, 1                 # for (int k = 1; k <= 64; k++)
	li t5, 65
	
	loop_k:
		beq t4, t5, return_false # if k == 65, return false
		
		addi sp, sp, -12
		sw a1, 0(sp)
		sw a2, 4(sp)
		sw a3, 8(sp)

		mv a3, a2	         # pass c
		mv a2, a1	         # pass r
		mv a1, t4                # a1 = k
		
		jal is_valid             # if (is_valid(grid, r, c, k))
		
		lw a1, 0(sp)
		lw a2, 4(sp)
		lw a3, 8(sp)
		addi sp, sp, 12
		
		beq a4, zero, next_k     # if not valid, continue loop

		sb t4, 0(t2)             # grid[r][c] = k;
		
		addi sp, sp, -12
		sw a1, 0(sp)
		sw a2, 4(sp)
		sw a3, 8(sp)
		
		mv a1, a1                # pass r
		addi a2, a2, 1		 # pass c + 1
		
		jal solve                # if (solve(grid, r, c + 1))
		
		lw a1, 0(sp)
		lw a2, 4(sp)
		lw a3, 8(sp)
		addi sp, sp, 12
		
		beq a3, zero, undo       # if not solved, undo change

		li a3, 1                 # return true;
		j epilogue

	undo:
		li t6, 0
		sb t6, 0(t2)             # grid[r][c] = 0;

	next_k:
		addi t4, t4, 1           # k++
		j loop_k                 # }
		
	next_row:

		addi sp, sp, -12
		sw a1, 0(sp)
		sw a2, 4(sp)
		sw a3, 8(sp)
		
		addi a1, a1, 1           # pass r + 1
		li a2, 0                 # pass 0 (start of next row)
		jal solve
		
		lw a1, 0(sp)
		lw a2, 4(sp)
		lw a3, 8(sp)
		addi sp, sp, 12
		
		j epilogue

	next_col:

		addi sp, sp, -12
		sw a1, 0(sp)
		sw a2, 4(sp)
		sw a3, 8(sp)

		# a1 unchanged	         # pass r
		addi a2, a2, 1           # pass c + 1
		jal solve
		
		lw a1, 0(sp)
		lw a2, 4(sp)
		lw a3, 8(sp)
		addi sp, sp, 12
		
		j epilogue
		
	return_false:
		li a3, 0                 # return false;
		j epilogue

	return_true:
		li a3, 1                 # return true;

	epilogue:
		# de-allocating space in stack
		lw a1, 0(sp)
		lw a2, 4(sp)
		lw ra, 8(sp)
		addi sp, sp, 12
		
		jr ra	
main:

	li a5, 64			# actual vector length (AVL) = 64
	vsetvli t0, a5, e8, ta, ma 	# set vector length based on 8-bit element vectors
	
	# VLMAX = LMUL x (VLEN/SEW)
	# since, LMUL = 1, VLEN = 64 x 8 = 512, SEW = 8
	# VLMAX = 64
	
	# VL = min(AVL, VLMAX)
	# since, AVL = VLMAX = 64
	# VL = 64
	
	# since elements processable by hardware <= software requirement,
	# no loops required

	la a0, grid		# base_address of grid stored in a0 (global)
	
	li a1, 0		# r = 0
	li a2, 0		# c = 0
	
	jal solve		# solve(grid, 0, 0)
	

_finish:
    li x3, 0xd0580000
    addi x5, x0, 0xff
    sb x5, 0(x3)
    beq x0, x0, _finish
.rept 100
    nop
.endr

.data

mask:
.byte 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0

grid:	# each row is a 64-byte vector (since 0-64 can be represented as a byte)
.byte 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 49, 50, 51, 52, 53, 54, 55, 48, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 57, 58, 59, 60, 61, 62, 63, 56, 1, 2, 3, 4, 5, 6, 7, 64, 9, 10, 11, 12, 13, 14, 15, 8, 17, 18, 19, 20, 21, 22, 23, 16, 25, 26, 27, 28, 29, 30, 31, 24, 33, 34, 35, 36, 37, 38, 39, 32, 41, 42, 43, 44, 45, 46, 47, 40, 49, 50, 51, 52, 53, 54, 55, 48, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 50, 51, 52, 53, 54, 55, 48, 49, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 58, 59, 60, 61, 62, 63, 56, 57, 2, 3, 4, 5, 6, 7, 64, 1, 10, 11, 12, 13, 14, 15, 8, 9, 18, 19, 20, 21, 22, 23, 16, 17, 26, 27, 28, 29, 30, 31, 24, 25, 34, 35, 36, 37, 38, 39, 32, 33, 42, 43, 44, 45, 46, 47, 40, 41, 50, 51, 52, 53, 54, 55, 48, 49, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 51, 52, 53, 54, 55, 48, 49, 50, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 59, 60, 61, 62, 63, 56, 57, 58, 3, 4, 5, 6, 7, 64, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10, 19, 20, 21, 22, 23, 16, 17, 18, 27, 28, 29, 30, 31, 24, 25, 26, 35, 36, 37, 38, 39, 32, 33, 34, 43, 44, 45, 46, 47, 40, 41, 42, 51, 52, 53, 54, 55, 48, 49, 50, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 52, 53, 54, 55, 48, 49, 50, 51, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 60, 61, 62, 63, 56, 57, 58, 59, 4, 5, 6, 7, 64, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, 20, 21, 22, 23, 16, 17, 18, 19, 28, 29, 30, 31, 24, 25, 26, 27, 36, 37, 38, 39, 32, 33, 34, 35, 44, 45, 46, 47, 40, 41, 42, 43, 52, 53, 54, 55, 48, 49, 50, 51, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 53, 54, 55, 48, 49, 50, 51, 52, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 61, 62, 63, 56, 57, 58, 59, 60, 5, 6, 7, 64, 1, 2, 3, 4, 13, 14, 15, 8, 9, 10, 11, 12, 21, 22, 23, 16, 17, 18, 19, 20, 29, 30, 31, 24, 25, 26, 27, 28, 37, 38, 39, 32, 33, 34, 35, 36, 45, 46, 47, 40, 41, 42, 43, 44, 53, 54, 55, 48, 49, 50, 51, 52, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 54, 55, 48, 49, 50, 51, 52, 53, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 62, 63, 56, 57, 58, 59, 60, 61, 6, 7, 64, 1, 2, 3, 4, 5, 14, 15, 8, 9, 10, 11, 12, 13, 22, 23, 16, 17, 18, 19, 20, 21, 30, 31, 24, 25, 26, 27, 28, 29, 38, 39, 32, 33, 34, 35, 36, 37, 46, 47, 40, 41, 42, 43, 44, 45, 54, 55, 48, 49, 50, 51, 52, 53, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 55, 48, 49, 50, 51, 52, 53, 54, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 63, 56, 57, 58, 59, 60, 61, 62, 7, 64, 1, 2, 3, 4, 5, 6, 15, 8, 9, 10, 11, 12, 13, 14, 23, 16, 17, 18, 19, 20, 21, 22, 31, 24, 25, 26, 27, 28, 29, 30, 39, 32, 33, 34, 35, 36, 37, 38, 47, 40, 41, 42, 43, 44, 45, 46, 55, 48, 49, 50, 51, 52, 53, 54
